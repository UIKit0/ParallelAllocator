{"name":"Parallel Allocator","tagline":"A memory allocator optimized for high concurrency and low memory consumption.","body":"A memory allocator optimized for high concurrency and low memory consumption on modern multi-core and multi-processor systems. It includes special support for NUMA systems (allocating memory from the nearest NUMA node, for example).\r\n\r\nIt is about 50% faster than the allocator included with Microsoft Visual C++ and uses less than half the memory for small objects (< 256 bytes), leading to better cache utilization; this also makes it ideal for applications that allocate a huge number of small objects.  \r\nIn many tests it is about 10% faster than the allocator included with Intel Thread Building Blocks.  \r\n\r\nIt is implemented in C++ with a small amount of x86 Assembly and was recently converted to C++11.  \r\nAccess to low-level synchronization and bit-manipulation instructions is done through compiler intrinsics.  \r\n\r\n### Performance:  \r\n\r\n![Allocator screenshot](http://www.gratianlup.com/documents/allocator_graph1.PNG)  \r\n\r\n![Allocator screenshot](http://www.gratianlup.com/documents/allocator_graph2.PNG)  \r\n\r\nThe tests were done on a quad-core Intel Core i7 CPU under Windows 8. Because the CRT ultimately calls *HeapAlloc*, the version  \r\nof Windows used is very important, the test application using the CRT allocator running *much* slower under Windows XP, which doesn't implement the *Low Fragmentation Heap* introduced with Windows 7.\r\n\r\n### Architecture overview:  \r\n\r\nThe architecture and the implementation details are described in the following document:  \r\n**[Download architecture and implementation details (PDF)](http://www.gratianlup.com/documents/parallel_allocator.pdf)**  \r\n  \r\n  \r\n![Allocator screenshot](http://www.gratianlup.com/documents/allocator_summary.png)  \r\n\r\n### Implementation details\r\n\r\nThe following documents present more implementation details:  \r\n**[Download internal data structures details (PDF)](http://www.gratianlup.com/documents/allocator.pdf)**  \r\n**[Download bin location size details (PDF)](http://www.gratianlup.com/documents/allocator_bins.pdf)**  \r\n\r\n![Allocator screenshot](http://www.gratianlup.com/documents/allocator.png)  \r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}